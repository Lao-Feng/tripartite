<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.teamax.alleyoop.dao.BusCommonditySortingMapper">
  <!-- 使用ehcache二级缓存 -->
  <cache type="org.mybatis.caches.ehcache.EhcacheCache"></cache>

  <resultMap id="BaseResultMap" type="com.teamax.alleyoop.entity.BusCommonditySorting">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="CommondityCode" jdbcType="INTEGER" property="commondityCode" />
    <result column="Featured" jdbcType="INTEGER" property="featured" />
    <result column="MostPopular" jdbcType="INTEGER" property="mostPopular" />
    <result column="NewHighestBidPrice" jdbcType="DOUBLE" property="newHighestBidPrice" />
    <result column="NewHighestBidTime" jdbcType="TIMESTAMP" property="newHighestBidTime" />
    <result column="NewLowestAskPrice" jdbcType="DOUBLE" property="newLowestAskPrice" />
    <result column="NewLowestAskTime" jdbcType="TIMESTAMP" property="newLowestAskTime" />
    <result column="AverageSalePrice" jdbcType="DOUBLE" property="averageSalePrice" />
    <result column="TotalSold" jdbcType="INTEGER" property="totalSold" />
    <result column="Volatility" jdbcType="DOUBLE" property="volatility" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Id, CommondityCode, Featured, MostPopular, NewHighestBidPrice, NewHighestBidTime, 
    NewLowestAskPrice, NewLowestAskTime, AverageSalePrice, TotalSold, Volatility
  </sql>
  <select id="selectByExample" parameterType="com.teamax.alleyoop.entity.BusCommonditySortingExample" resultMap="BaseResultMap" useCache="true">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bus_commondity_sorting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap" useCache="true">
    select 
    <include refid="Base_Column_List" />
    from bus_commondity_sorting
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bus_commondity_sorting
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.teamax.alleyoop.entity.BusCommonditySortingExample">
    delete from bus_commondity_sorting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.teamax.alleyoop.entity.BusCommonditySorting">
    insert into bus_commondity_sorting (Id, CommondityCode, Featured, 
      MostPopular, NewHighestBidPrice, NewHighestBidTime, 
      NewLowestAskPrice, NewLowestAskTime, AverageSalePrice, 
      TotalSold, Volatility)
    values (#{id,jdbcType=INTEGER}, #{commondityCode,jdbcType=INTEGER}, #{featured,jdbcType=INTEGER}, 
      #{mostPopular,jdbcType=INTEGER}, #{newHighestBidPrice,jdbcType=DOUBLE}, #{newHighestBidTime,jdbcType=TIMESTAMP}, 
      #{newLowestAskPrice,jdbcType=DOUBLE}, #{newLowestAskTime,jdbcType=TIMESTAMP}, #{averageSalePrice,jdbcType=DOUBLE}, 
      #{totalSold,jdbcType=INTEGER}, #{volatility,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.teamax.alleyoop.entity.BusCommonditySorting">
    insert into bus_commondity_sorting
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        Id,
      </if>
      <if test="commondityCode != null">
        CommondityCode,
      </if>
      <if test="featured != null">
        Featured,
      </if>
      <if test="mostPopular != null">
        MostPopular,
      </if>
      <if test="newHighestBidPrice != null">
        NewHighestBidPrice,
      </if>
      <if test="newHighestBidTime != null">
        NewHighestBidTime,
      </if>
      <if test="newLowestAskPrice != null">
        NewLowestAskPrice,
      </if>
      <if test="newLowestAskTime != null">
        NewLowestAskTime,
      </if>
      <if test="averageSalePrice != null">
        AverageSalePrice,
      </if>
      <if test="totalSold != null">
        TotalSold,
      </if>
      <if test="volatility != null">
        Volatility,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="commondityCode != null">
        #{commondityCode,jdbcType=INTEGER},
      </if>
      <if test="featured != null">
        #{featured,jdbcType=INTEGER},
      </if>
      <if test="mostPopular != null">
        #{mostPopular,jdbcType=INTEGER},
      </if>
      <if test="newHighestBidPrice != null">
        #{newHighestBidPrice,jdbcType=DOUBLE},
      </if>
      <if test="newHighestBidTime != null">
        #{newHighestBidTime,jdbcType=TIMESTAMP},
      </if>
      <if test="newLowestAskPrice != null">
        #{newLowestAskPrice,jdbcType=DOUBLE},
      </if>
      <if test="newLowestAskTime != null">
        #{newLowestAskTime,jdbcType=TIMESTAMP},
      </if>
      <if test="averageSalePrice != null">
        #{averageSalePrice,jdbcType=DOUBLE},
      </if>
      <if test="totalSold != null">
        #{totalSold,jdbcType=INTEGER},
      </if>
      <if test="volatility != null">
        #{volatility,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.teamax.alleyoop.entity.BusCommonditySortingExample" resultType="java.lang.Long" useCache="true">
    select count(*) from bus_commondity_sorting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bus_commondity_sorting
    <set>
      <if test="record.id != null">
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.commondityCode != null">
        CommondityCode = #{record.commondityCode,jdbcType=INTEGER},
      </if>
      <if test="record.featured != null">
        Featured = #{record.featured,jdbcType=INTEGER},
      </if>
      <if test="record.mostPopular != null">
        MostPopular = #{record.mostPopular,jdbcType=INTEGER},
      </if>
      <if test="record.newHighestBidPrice != null">
        NewHighestBidPrice = #{record.newHighestBidPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.newHighestBidTime != null">
        NewHighestBidTime = #{record.newHighestBidTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.newLowestAskPrice != null">
        NewLowestAskPrice = #{record.newLowestAskPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.newLowestAskTime != null">
        NewLowestAskTime = #{record.newLowestAskTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.averageSalePrice != null">
        AverageSalePrice = #{record.averageSalePrice,jdbcType=DOUBLE},
      </if>
      <if test="record.totalSold != null">
        TotalSold = #{record.totalSold,jdbcType=INTEGER},
      </if>
      <if test="record.volatility != null">
        Volatility = #{record.volatility,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bus_commondity_sorting
    set Id = #{record.id,jdbcType=INTEGER},
      CommondityCode = #{record.commondityCode,jdbcType=INTEGER},
      Featured = #{record.featured,jdbcType=INTEGER},
      MostPopular = #{record.mostPopular,jdbcType=INTEGER},
      NewHighestBidPrice = #{record.newHighestBidPrice,jdbcType=DOUBLE},
      NewHighestBidTime = #{record.newHighestBidTime,jdbcType=TIMESTAMP},
      NewLowestAskPrice = #{record.newLowestAskPrice,jdbcType=DOUBLE},
      NewLowestAskTime = #{record.newLowestAskTime,jdbcType=TIMESTAMP},
      AverageSalePrice = #{record.averageSalePrice,jdbcType=DOUBLE},
      TotalSold = #{record.totalSold,jdbcType=INTEGER},
      Volatility = #{record.volatility,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.teamax.alleyoop.entity.BusCommonditySorting">
    update bus_commondity_sorting
    <set>
      <if test="commondityCode != null">
        CommondityCode = #{commondityCode,jdbcType=INTEGER},
      </if>
      <if test="featured != null">
        Featured = #{featured,jdbcType=INTEGER},
      </if>
      <if test="mostPopular != null">
        MostPopular = #{mostPopular,jdbcType=INTEGER},
      </if>
      <if test="newHighestBidPrice != null">
        NewHighestBidPrice = #{newHighestBidPrice,jdbcType=DOUBLE},
      </if>
      <if test="newHighestBidTime != null">
        NewHighestBidTime = #{newHighestBidTime,jdbcType=TIMESTAMP},
      </if>
      <if test="newLowestAskPrice != null">
        NewLowestAskPrice = #{newLowestAskPrice,jdbcType=DOUBLE},
      </if>
      <if test="newLowestAskTime != null">
        NewLowestAskTime = #{newLowestAskTime,jdbcType=TIMESTAMP},
      </if>
      <if test="averageSalePrice != null">
        AverageSalePrice = #{averageSalePrice,jdbcType=DOUBLE},
      </if>
      <if test="totalSold != null">
        TotalSold = #{totalSold,jdbcType=INTEGER},
      </if>
      <if test="volatility != null">
        Volatility = #{volatility,jdbcType=DOUBLE},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.teamax.alleyoop.entity.BusCommonditySorting">
    update bus_commondity_sorting
    set CommondityCode = #{commondityCode,jdbcType=INTEGER},
      Featured = #{featured,jdbcType=INTEGER},
      MostPopular = #{mostPopular,jdbcType=INTEGER},
      NewHighestBidPrice = #{newHighestBidPrice,jdbcType=DOUBLE},
      NewHighestBidTime = #{newHighestBidTime,jdbcType=TIMESTAMP},
      NewLowestAskPrice = #{newLowestAskPrice,jdbcType=DOUBLE},
      NewLowestAskTime = #{newLowestAskTime,jdbcType=TIMESTAMP},
      AverageSalePrice = #{averageSalePrice,jdbcType=DOUBLE},
      TotalSold = #{totalSold,jdbcType=INTEGER},
      Volatility = #{volatility,jdbcType=DOUBLE}
    where Id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getMostSalesOver72Hour" resultMap="BaseResultMap" useCache="true">
    select commondityCode,count(*) mostPopular from bus_order
    where
      date_add(OrderTime, interval 72 hour) &gt;= now()
    group by CommondityCode
  </select>

  <select id="getTotalSoldOver12Month" resultMap="BaseResultMap" useCache="true">
    select commondityCode,count(*) totalSold from bus_order
    where
      date_add(OrderTime, interval 12 month) &gt;= now()
    group by CommondityCode
  </select>

  <select id="selectSortingByCommodityCode" resultMap="BaseResultMap" useCache="true">
    select id
    from bus_commondity_sorting
    where CommondityCode = #{commodityCode,jdbcType=INTEGER}
  </select>

</mapper>